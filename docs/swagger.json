{
    "swagger": "2.0",
    "info": {
        "title": "Soundproof service",
        "contact": {
            "name": "Pavel Karatkevich",
            "url": "https://www.linkedin.com/in/pavel-karatkevich-236461178/",
            "email": "p.korotkevitch@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login form which received login/password, generates JWT token and returns a login response (user info)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Login form",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/auth/register/": {
            "post": {
                "description": "Register a user by passing a User Registration Request via the context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "description": "Received login request via context, checks JWT token and retrieves user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "type"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "Update user info by passing a User Update Request via the context. Parses signature and signed string from Metamask and stores a Metamask public address into the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        }
    }
}